// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.5.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace ISIS.Schedule
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.5.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Track Course CIP and Approval Number")]
    public partial class TrackCourseCIPAndApprovalNumberFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CourseCIPAndApprovalNumber.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Track Course CIP and Approval Number", "In order to properly integrate with Datatel\nAs a scheduler\nI want to set the cour" +
                    "se CIP and approval number", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set CIP on a new course")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetCIPOnANewCourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set CIP on a new course", new string[] {
                        "domain"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I have created an ACAD course BIOL 1301 \"Introductory Biology\"");
#line 9
 testRunner.When("I set the CIP to 123456");
#line 10
 testRunner.Then("the CIP is 123456");
#line 11
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set approval number on a new course")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetApprovalNumberOnANewCourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set approval number on a new course", new string[] {
                        "domain"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I have created an ACAD course BIOL 1301 \"Introductory Biology\"");
#line 16
 testRunner.When("I set the approval number to 1234567890");
#line 17
 testRunner.Then("the approval number is 1234567890");
#line 18
 testRunner.And("the CIP is 123456");
#line 19
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set CIP on a course with an approval number")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetCIPOnACourseWithAnApprovalNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set CIP on a course with an approval number", new string[] {
                        "domain"});
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given("I have created an ACAD course BIOL 1301 \"Introductory Biology\"");
#line 24
 testRunner.And("I have set the approval number to 1234567890");
#line 25
 testRunner.When("I set the CIP to 111111");
#line 26
 testRunner.Then("the CIP is 111111");
#line 27
 testRunner.And("the approval number is blank");
#line 28
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The same approval number is assigned")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void TheSameApprovalNumberIsAssigned()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The same approval number is assigned", new string[] {
                        "domain"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
 testRunner.Given("I have created an ACAD course BIOL 1301 \"Introductory Biology\"");
#line 33
 testRunner.And("I have set the approval number to 1234567890");
#line 34
 testRunner.When("I set the approval number to 1234567890");
#line 35
 testRunner.Then("it should do nothing");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The same CIP is assigned")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void TheSameCIPIsAssigned()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The same CIP is assigned", new string[] {
                        "domain"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 39
 testRunner.Given("I have created an ACAD course BIOL 1301 \"Introductory Biology\"");
#line 40
 testRunner.And("I have set the CIP to 123456");
#line 41
 testRunner.When("I set the CIP to 123456");
#line 42
 testRunner.Then("it should do nothing");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set approval number on a course with a CIP")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetApprovalNumberOnACourseWithACIP()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set approval number on a course with a CIP", new string[] {
                        "domain"});
#line 45
this.ScenarioSetup(scenarioInfo);
#line 46
 testRunner.Given("I have created an ACAD course BIOL 1301 \"Introductory Biology\"");
#line 47
 testRunner.And("I have set the CIP to 123456");
#line 48
 testRunner.When("I set the approval number to 1111111111");
#line 49
 testRunner.Then("the CIP is 111111");
#line 50
 testRunner.And("the approval number is 1111111111");
#line 51
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The same CIP is assigned after an approval number")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void TheSameCIPIsAssignedAfterAnApprovalNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The same CIP is assigned after an approval number", new string[] {
                        "domain"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
 testRunner.Given("I have created an ACAD course BIOL 1301 \"Introductory Biology\"");
#line 56
 testRunner.And("I have set the approval number to 1234567890");
#line 57
 testRunner.When("I set the CIP to 123456");
#line 58
 testRunner.Then("the approval number is blank");
#line 59
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
