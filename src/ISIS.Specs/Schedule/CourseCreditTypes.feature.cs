// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.5.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace ISIS.Schedule
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.5.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Course Credit Types")]
    public partial class CourseCreditTypesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CourseCreditTypes.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Course Credit Types", "In order to manage the course schedule\nAs a scheduler\nI want to set the credit ty" +
                    "pe on a course", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Dont allow setting credit type on a credit course")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void DontAllowSettingCreditTypeOnACreditCourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Dont allow setting credit type on a credit course", new string[] {
                        "domain"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I have created an ACAD course BIOL 1301 Introductory Biology");
#line 9
 testRunner.When("I change the credit type to Grant Funded");
#line 10
 testRunner.Then("the aggregate state is invalid");
#line 11
 testRunner.And("the error is \"Your attempt to change the credit type failed because this is a cre" +
                    "dit course. Credit type may only be set on Continuing Education courses.\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set the credit type to the same credit type")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetTheCreditTypeToTheSameCreditType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set the credit type to the same credit type", new string[] {
                        "domain"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I have created a Workforce Funded course AGEQ 1091 Routine Management of Equine H" +
                    "ealth");
#line 16
 testRunner.When("I change the credit type to Workforce Funded");
#line 17
 testRunner.Then("it should do nothing");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set the credit type to Contract Training Funded on a CE course")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetTheCreditTypeToContractTrainingFundedOnACECourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set the credit type to Contract Training Funded on a CE course", new string[] {
                        "domain"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given("I have created a Workforce Funded course AGEQ 1091 Routine Management of Equine H" +
                    "ealth");
#line 22
 testRunner.When("I change the credit type to Contract Training Funded");
#line 23
 testRunner.Then("the credit type is Contract Training Funded");
#line 24
 testRunner.And("the course type is CWECM");
#line 25
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set the credit type to Contract Training Non-Funded on a CE course")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetTheCreditTypeToContractTrainingNon_FundedOnACECourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set the credit type to Contract Training Non-Funded on a CE course", new string[] {
                        "domain"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given("I have created a Workforce Funded course AGEQ 1091 Routine Management of Equine H" +
                    "ealth");
#line 30
 testRunner.When("I change the credit type to Contract Training Non-Funded");
#line 31
 testRunner.Then("the credit type is Contract Training Non-Funded");
#line 32
 testRunner.And("the course type is CE");
#line 33
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set the credit type to Special Interests on a CE course")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetTheCreditTypeToSpecialInterestsOnACECourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set the credit type to Special Interests on a CE course", new string[] {
                        "domain"});
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given("I have created a Workforce Funded course AGEQ 1091 Routine Management of Equine H" +
                    "ealth");
#line 38
 testRunner.When("I change the credit type to Special Interests");
#line 39
 testRunner.Then("the credit type is Special Interests");
#line 40
 testRunner.And("the course type is CE");
#line 41
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set the credit type to Grant Funded on a CE course")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetTheCreditTypeToGrantFundedOnACECourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set the credit type to Grant Funded on a CE course", new string[] {
                        "domain"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
 testRunner.Given("I have created a Workforce Funded course AGEQ 1091 Routine Management of Equine H" +
                    "ealth");
#line 46
 testRunner.When("I change the credit type to Grant Funded");
#line 47
 testRunner.Then("the credit type is Grant Funded");
#line 48
 testRunner.And("the course type is CWECM");
#line 49
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set the credit type to Grant Non-Funded on a CE course")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetTheCreditTypeToGrantNon_FundedOnACECourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set the credit type to Grant Non-Funded on a CE course", new string[] {
                        "domain"});
#line 52
this.ScenarioSetup(scenarioInfo);
#line 53
 testRunner.Given("I have created a Workforce Funded course AGEQ 1091 Routine Management of Equine H" +
                    "ealth");
#line 54
 testRunner.When("I change the credit type to Grant Non-Funded");
#line 55
 testRunner.Then("the credit type is Grant Non-Funded");
#line 56
 testRunner.And("the course type is CE");
#line 57
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set the credit type to Workforce Funded on a CE course")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetTheCreditTypeToWorkforceFundedOnACECourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set the credit type to Workforce Funded on a CE course", new string[] {
                        "domain"});
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
 testRunner.Given("I have created a Special Interests course AGEQ 1091 Routine Management of Equine " +
                    "Health");
#line 62
 testRunner.When("I change the credit type to Workforce Funded");
#line 63
 testRunner.Then("the credit type is Workforce Funded");
#line 64
 testRunner.And("the course type is CWECM");
#line 65
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set the credit type to Workforce Non-Funded on a CE course")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetTheCreditTypeToWorkforceNon_FundedOnACECourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set the credit type to Workforce Non-Funded on a CE course", new string[] {
                        "domain"});
#line 68
this.ScenarioSetup(scenarioInfo);
#line 69
 testRunner.Given("I have created a Workforce Funded course AGEQ 1091 Routine Management of Equine H" +
                    "ealth");
#line 70
 testRunner.When("I change the credit type to Workforce Non-Funded");
#line 71
 testRunner.Then("the credit type is Workforce Non-Funded");
#line 72
 testRunner.And("the course type is CE");
#line 73
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
