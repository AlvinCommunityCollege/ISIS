// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.5.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace ISIS.Schedule
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.5.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Course Topic Codes")]
    public partial class CourseTopicCodesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CourseTopicCodes.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Course Topic Codes", "In order to manage the course schedule\nAs a scheduler\nI want to track a course\'s " +
                    "topic code", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a topic code")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void CreateATopicCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a topic code", new string[] {
                        "domain"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.When("I create a topic code BANK Banking/Finance");
#line 9
 testRunner.Then("the topic code BANK is created");
#line 10
 testRunner.And("the topic code description is Banking/Finance");
#line 11
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change the topic code abbreviation")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void ChangeTheTopicCodeAbbreviation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change the topic code abbreviation", new string[] {
                        "domain"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I have created a topic code BANK Banking/Finance");
#line 16
 testRunner.When("I change the topic code abbreviation to MONEY");
#line 17
 testRunner.Then("the topic code abbreviation is MONEY");
#line 18
 testRunner.And("the previous topic code abbreviation is BANK");
#line 19
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change the topic code description")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void ChangeTheTopicCodeDescription()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change the topic code description", new string[] {
                        "domain"});
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given("I have created a topic code BANK Banking/Finance");
#line 24
 testRunner.When("I change the topic code description to Theft");
#line 25
 testRunner.Then("the topic code description is Theft");
#line 26
 testRunner.And("the previous topic code description is Banking/Finance");
#line 27
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change the topic code on a CE course")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void ChangeTheTopicCodeOnACECourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change the topic code on a CE course", new string[] {
                        "domain"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
 testRunner.Given("I have created a topic code BANK Banking/Finance");
#line 32
 testRunner.And("I have created a Workforce Funded course AGEQ 1091 \"Routine Management of Equine " +
                    "Health\"");
#line 33
 testRunner.When("I change the courses\'s topic code to BANK");
#line 34
 testRunner.Then("the course\'s topic code is BANK");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change the topic code on a CE course to the same topic code")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void ChangeTheTopicCodeOnACECourseToTheSameTopicCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change the topic code on a CE course to the same topic code", new string[] {
                        "domain"});
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
 testRunner.Given("I have created a topic code BANK Banking/Finance");
#line 39
 testRunner.And("I have created a Workforce Funded course AGEQ 1091 \"Routine Management of Equine " +
                    "Health\"");
#line 40
 testRunner.And("I have changed the course\'s topic code to BANK Banking/Finance");
#line 41
 testRunner.When("I change the courses\'s topic code to BANK");
#line 42
 testRunner.Then("it should do nothing");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
