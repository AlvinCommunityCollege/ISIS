// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.5.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace ISIS.Schedule
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.5.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Course CEUs")]
    public partial class CourseCEUsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CourseCEUs.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Course CEUs", "In order to manage the course schedule\nAs a scheduler\nI want to track CEUs of cou" +
                    "rses", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change CEUs to a positive number")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void ChangeCEUsToAPositiveNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change CEUs to a positive number", new string[] {
                        "domain"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I have created a Workforce Funded course AGEQ 1091 \"Routine Management of Equine " +
                    "Health\"");
#line 9
 testRunner.When("I change the CEUs to 0.70");
#line 10
 testRunner.Then("the CEUs are 0.70");
#line 11
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change CEUs to a negative number")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void ChangeCEUsToANegativeNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change CEUs to a negative number", new string[] {
                        "domain"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I have created a Workforce Funded course AGEQ 1091 \"Routine Management of Equine " +
                    "Health\"");
#line 16
 testRunner.When("I change the CEUs to -0.10");
#line 17
 testRunner.Then("the command is invalid");
#line 18
 testRunner.And("the error is \"CEUs can\'t be negative\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change CEUs to an unreasonable number")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void ChangeCEUsToAnUnreasonableNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change CEUs to an unreasonable number", new string[] {
                        "domain"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("I have created a Workforce Funded course AGEQ 1091 \"Routine Management of Equine " +
                    "Health\"");
#line 23
 testRunner.When("I change the CEUs to 1000.5");
#line 24
 testRunner.Then("the command is invalid");
#line 25
 testRunner.And("the error is \"CEUs must be less than 1000\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change CEUs to zero")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void ChangeCEUsToZero()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change CEUs to zero", new string[] {
                        "domain"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given("I have created a Workforce Funded course AGEQ 1091 \"Routine Management of Equine " +
                    "Health\"");
#line 30
 testRunner.And("I have changed the CEUs to 0.70");
#line 31
 testRunner.When("I change the CEUs to 0");
#line 32
 testRunner.Then("the CEUs are 0");
#line 33
 testRunner.And("it should do nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change CEUs to the same number")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void ChangeCEUsToTheSameNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change CEUs to the same number", new string[] {
                        "domain"});
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given("I have created a Workforce Funded course AGEQ 1091 \"Routine Management of Equine " +
                    "Health\"");
#line 38
 testRunner.And("I have changed the CEUs to 0.70");
#line 39
 testRunner.When("I change the CEUs to 0.70");
#line 40
 testRunner.Then("it should do nothing");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CEUs default to zero")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void CEUsDefaultToZero()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CEUs default to zero", new string[] {
                        "domain"});
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
 testRunner.Given("I have created a Workforce Funded course AGEQ 1091 \"Routine Management of Equine " +
                    "Health\"");
#line 45
 testRunner.When("I change the CEUs to 0");
#line 46
 testRunner.Then("it should do nothing");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Credit courses don\'t use CEUs")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void CreditCoursesDonTUseCEUs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Credit courses don\'t use CEUs", new string[] {
                        "domain"});
#line 49
this.ScenarioSetup(scenarioInfo);
#line 50
 testRunner.Given("I have created an ACAD course BIOL 1301 \"Introductory Biology\"");
#line 51
 testRunner.When("I change the CEUs to 0");
#line 52
 testRunner.Then("the aggregate state is invalid");
#line 53
 testRunner.And("the error is \"Your attempt to change the CEUs failed because this is a credit cou" +
                    "rse. CEUs may only be set on Continuing Education courses.\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
